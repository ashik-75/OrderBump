import {
  Button,
  Card,
  Checkbox,
  ChoiceList,
  TextField,
} from "@shopify/polaris";
import React, { useCallback, useState } from "react";
import styles from "../styles/AutoBump.module.css";

const RadioButton = ({ data: { settingsInfo, setSettingsInfo } }) => {
  const handleChange = useCallback(
    (value) => setSettingsInfo({ ...settingsInfo, skipDisplay: value }),
    []
  );
  return (
    <>
      <p className={styles.settingsSubtitle}>
        Select an option for Auto Bumps offers:{" "}
      </p>

      <ChoiceList
        name="offer"
        choices={[
          {
            label: "0% - only Manual Bumps will be shown to customers",
            value: "0%",
          },
          {
            label:
              "50% - half of the bumps shown to customers will be generated by the Computer (great for A/B testing!)",
            value: "50%",
          },
          {
            label: "100% - only Auto Bumps will be shown to customers",
            value: "100%",
          },
        ]}
        selected={settingsInfo?.skipDisplay}
        onChange={handleChange}
      />
    </>
  );
};

const Backup = ({ data: { settingsInfo, setSettingsInfo } }) => {
  const handleChange = useCallback((newChecked) =>
    setSettingsInfo({ ...settingsInfo, backup: newChecked })
  );
  return (
    <div className={styles.backupDiv}>
      <p className={styles.backupParagraph}>Backup Offer settings: </p>
      <Checkbox
        label="Basic checkbox"
        checked={settingsInfo?.backup}
        onChange={handleChange}
      />
    </div>
  );
};

const BumpsType = ({ data: { settingsInfo, setSettingsInfo } }) => {
  const handlePrePurchase = useCallback((newCheck) =>
    setSettingsInfo({
      ...settingsInfo,
      prePurchase: newCheck,
    })
  );
  const handlePostPurchase = useCallback((newCheck) =>
    setSettingsInfo({
      ...settingsInfo,
      postPurchase: newCheck,
    })
  );

  return (
    <div className={styles.BumpTypeDiv}>
      <p>Select where Auto Bumps will be shown:</p>
      <Checkbox
        label="Pre-purchase (checkout)"
        helpText="Bumps presented on the checkout page will be automatically generated"
        checked={settingsInfo?.prePurchase}
        onChange={handlePrePurchase}
      />
      <Checkbox
        label="
        Post-purchase"
        helpText="Bumps presented on the post-purchase page will be automatically generated"
        checked={settingsInfo?.postPurchase}
        onChange={handlePostPurchase}
      />
    </div>
  );
};

const Discount = ({ data: { settingsInfo, setSettingsInfo } }) => {
  return (
    <div>
      <TextField
        value={settingsInfo?.amount}
        onChange={(value) =>
          setSettingsInfo({ ...settingsInfo, amount: value })
        }
        label="Add discount (post-purchase only)"
        placeholder="e.g..9.99 "
        type="number"
        // autoComplete="email"
      />
    </div>
  );
};

const DiscountType = ({ data: { settingsInfo, setSettingsInfo } }) => {
  const handleChange = useCallback(
    (value) =>
      setSettingsInfo({
        ...settingsInfo,
        discountType: value,
      }),
    []
  );
  return (
    <>
      <ChoiceList
        choices={[
          {
            label: "Percentage",
            value: "percentage",
          },
          {
            label: "Fixed Amount",
            value: "Fixed",
          },
        ]}
        selected={settingsInfo?.discountType}
        onChange={handleChange}
      />
    </>
  );
};

const AutoBumSettings = () => {
  const [settingsInfo, setSettingsInfo] = useState({
    skipDisplay: ["50%"],
    backup: false,
    prePurchase: false,
    postPurchase: false,
    amount: 0,
    discountType: ["percentage"],
  });

  const handleClick = () => {
    console.log({
      ...settingsInfo,
      discountType: settingsInfo?.discountType[0],
      skipDisplay: settingsInfo?.skipDisplay[0],
    });
  };

  // const handleSettingsInfo = (e) =>{}

  return (
    <Card title="Auto Bumps Settings" sectioned>
      <RadioButton data={{ settingsInfo, setSettingsInfo }} />
      <Backup data={{ settingsInfo, setSettingsInfo }} />
      <BumpsType data={{ settingsInfo, setSettingsInfo }} />
      <div className={styles.discount}>
        <Discount data={{ settingsInfo, setSettingsInfo }} />
        <DiscountType data={{ settingsInfo, setSettingsInfo }} />
      </div>

      <Button onClick={handleClick}>Submit</Button>
    </Card>
  );
};

export default AutoBumSettings;
